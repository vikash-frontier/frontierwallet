{"version":3,"sources":["components/ETHAddress.js","components/ETHName.js","App.js","reportWebVitals.js","index.js"],"names":["ETHAddress","useState","ethname","setETHName","myresult","setResult","Web3","web3","setWeb","getBalance","a","eth","err","result1","console","log","utils","fromWei","useEffect","providers","HttpProvider","className","onSubmit","e","preventDefault","htmlFor","type","id","onChange","target","value","onClick","ETHName","ens","getAddress","then","address","App","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf8e0a0.chunk.js","sourcesContent":["import Web3 from \"web3\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ETHAddress = ()=>{\n\n  const [ethname, setETHName] = useState(\"\");\n  const [myresult, setResult] = useState(null);\n  const [web3, setWeb] = useState(new Web3());\n\n  const getBalance = async() => {\n    web3.eth.getBalance(ethname, (err, result1) => {\n      if (err) {\n        console.log(err);\n      } else {\n        setResult(web3.utils.fromWei(result1, \"ether\"));\n      }\n    });\n  };\n\n\n\n  useEffect(() => {\n    const web3 = new Web3(\n      new Web3.providers.HttpProvider(\n        \"https://mainnet.infura.io/v3/e1e1503ef9c84471864cffb4f252ef66\"\n      )\n    );\n    console.log(web3);\n    setWeb(web3);\n  }, []);\n\n  const onChangeValue=(e)=>{\n      setETHName(e.target.value);\n  }\n\n\n    return(\n      <div className=\"container\"> \n      <form\n        className=\"form-element\"\n        onSubmit={(e) => e.preventDefault()}\n      >\n        <label\n          className=\"user-element2\"\n          htmlFor=\"username\"\n        >\n          Ether Balance\n        </label>\n        <div className=\"div-2\">\n          <label\n            className=\"title\"\n            htmlFor=\"username\"\n          >\n           Enter Wallet address\n          </label>\n          <br></br>\n          <input\n            className=\"input-box\"\n            type=\"text\"\n            id=\"username\"\n            onChange={onChangeValue}\n            value={ethname}\n          />\n        </div>\n        <div className=\"div-3\">\n          <button\n            className=\"btn\"\n            onClick={getBalance}\n          >\n            Show Balance Adress\n          </button>\n        </div>\n        {myresult ? (\n          <label\n            className=\"balance\"\n            htmlFor=\"username\"\n          >\n            {`Your Balance : ${myresult}  ETH`}\n          </label>\n        ) : null}\n      </form>\n    </div>\n    )\n}\nexport default ETHAddress;","import Web3 from \"web3\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ETHName= ()=>{\n\n  const [ethname, setETHName] = useState(\"\");\n  const [myresult, setResult] = useState(null);\n  const [web3, setWeb] = useState(new Web3());\n\n  const getBalance = async() => {\n    await web3.eth.ens.getAddress(`${ethname}`).then(function (address) {\n        // console.log(address);\n        //  setAdd(address)\n      web3.eth.getBalance(address, (err, result1) => {\n      if (err) {\n        console.log(err);\n      } else {\n        setResult(web3.utils.fromWei(result1, \"ether\"));\n      }\n    });\n   });\n  };\n\n  useEffect(() => {\n    const web3 = new Web3(\n      new Web3.providers.HttpProvider(\n        \"https://mainnet.infura.io/v3/e1e1503ef9c84471864cffb4f252ef66\"\n      )\n    );\n    console.log(web3);\n    setWeb(web3);\n  }, []);\n\n  const onChangeValue=(e)=>{\n      setETHName(e.target.value);\n  }\n\n\n    return(\n      <div className=\"sub-container\"> \n      <form\n        className=\"form-element\"\n        onSubmit={(e) => e.preventDefault()}\n      >\n        <label\n          className=\"user-element\"\n          htmlFor=\"username\"\n        >\n          Ether Balance\n        </label>\n        <div className=\"div-2\">\n          <label\n            className=\"title\"\n            htmlFor=\"username\"\n          >\n            Enter ETH Name\n          </label>\n          <br></br>\n          <input\n            className=\"input-box\"\n            type=\"text\"\n            id=\"username\"\n            onChange={onChangeValue}\n            value={ethname}\n          />\n        </div>\n        <div className=\"div-3\">\n          <button\n            className=\"btn\"\n            onClick={getBalance}\n          >\n            Show Balance Adress\n          </button>\n        </div>\n        {myresult ? (\n          <label\n            className=\"balance\"\n            htmlFor=\"username\"\n          >\n            {`Your Balance : ${myresult}  ETH`}\n          </label>\n        ) : null}\n      </form>\n    </div>\n    )\n}\nexport default ETHName;","import React from \"react\";\nimport \"./App.css\";\nimport ETHAddress from \"./components/ETHAddress\";\nimport ETHName from \"./components/ETHName\";\n\nfunction App() {\n \n  return (\n    <React.Fragment>\n     <ETHAddress />\n     <ETHName />\n     </React.Fragment>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}